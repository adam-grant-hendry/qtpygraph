"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide6.QtQuick, except for defaults which are replaced by "...".
"""
from __future__ import annotations

import PySide6.QtCore
import PySide6.QtGui
import PySide6.QtOpenGL
import PySide6.QtQml
import PySide6.QtQuick

class QSGTextureMaterial(PySide6.QtQuick.QSGOpaqueTextureMaterial):
    """
    https://doc.qt.io/qt-6/qsgtexturematerial.html

    **Detailed Description**

    **Warning:** This utility class is only functional when running with the
    default backend of the Qt Quick scenegraph.

    The textured material will fill every pixel in a geometry with the supplied
    texture.

    The geometry to be rendered with a texture material requires vertices in
    attribute location 0 and texture coordinates in attribute location 1. The
    texture coordinate is a 2-dimensional floating-point tuple. The
    **QSGGeometry::defaultAttributes_TexturedPoint2D**  returns an attribute set
    compatible with this material.

    The texture to be rendered can be set using **setTexture** (). How the
    texture should be rendered can be specified using **setMipmapFiltering** (),
    **setFiltering** (), **setHorizontalWrapMode** () and
    **setVerticalWrapMode** (). The rendering state is set on the texture
    instance just before it is bound.

    The textured material respects the current matrix and the alpha channel of
    the texture. It will also respect the accumulated opacity in the scenegraph.

    A texture material must have a texture set before it is used as a material
    in the scene graph.
    """

    def __init__(self) -> None: ...
    def createShader(
        self, renderMode: PySide6.QtQuick.QSGRendererInterface.RenderMode
    ) -> PySide6.QtQuick.QSGMaterialShader: ...
    def type(self) -> PySide6.QtQuick.QSGMaterialType: ...
