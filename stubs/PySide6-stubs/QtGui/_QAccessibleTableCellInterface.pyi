"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide6.QtGui, except for defaults which are replaced by "...".
"""

from __future__ import annotations

import PySide6.QtCore
import PySide6.QtGui

class QAccessibleTableCellInterface:
    """
    https://doc.qt.io/qt-6/qaccessibletablecellinterface.html

    **Detailed Description**

    **IAccessible2 Specification**
    """

    def __init__(self) -> None: ...
    def columnExtent(self) -> int:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#columnExtent

        **[pure virtual] int QAccessibleTableCellInterface::columnExtent()
        const**

        Returns the number of columns occupied by this cell accessible.
        """
        ...
    def columnHeaderCells(self) -> list[PySide6.QtGui.QAccessibleInterface]:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#columnHeaderCe
        lls

        **[pure virtual] QList<QAccessibleInterface *>
        QAccessibleTableCellInterface::columnHeaderCells() const**

        Returns the column headers as an array of cell accessibles.
        """
        ...
    def columnIndex(self) -> int:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#columnIndex

        **[pure virtual] int QAccessibleTableCellInterface::columnIndex()
        const**

        Translates this cell accessible into the corresponding column index.
        """
        ...
    def isSelected(self) -> bool:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#isSelected

        **[pure virtual] bool QAccessibleTableCellInterface::isSelected()
        const**

        Returns a boolean value indicating whether this cell is selected.
        """
        ...
    def rowExtent(self) -> int:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#rowExtent

        **[pure virtual] int QAccessibleTableCellInterface::rowExtent() const**

        Returns the number of rows occupied by this cell accessible.
        """
        ...
    def rowHeaderCells(self) -> list[PySide6.QtGui.QAccessibleInterface]:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#rowHeaderCells

        **[pure virtual] QList<QAccessibleInterface *>
        QAccessibleTableCellInterface::rowHeaderCells() const**

        Returns the row headers as an array of cell accessibles.
        """
        ...
    def rowIndex(self) -> int:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#rowIndex

        **[pure virtual] int QAccessibleTableCellInterface::rowIndex() const**

        Translates this cell accessible into the corresponding row index.
        """
        ...
    def table(self) -> PySide6.QtGui.QAccessibleInterface:
        """
        https://doc.qt.io/qt-6/qaccessibletablecellinterface.html#table

        **[pure virtual] QAccessibleInterface
        *QAccessibleTableCellInterface::table() const**

        Returns the **QAccessibleInterface**  of the table containing this cell.
        """
        ...
