"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide6.QtXml, except for defaults which are replaced by "...".
"""
from __future__ import annotations

from typing import overload

import PySide6.QtCore
import PySide6.QtXml

class QDomNotation(PySide6.QtXml.QDomNode):
    """
    https://doc.qt.io/qt-6/qdomnotation.html

    **Detailed Description**

    A notation either declares, by name, the format of an unparsed entity (see
    section 4.7 of the XML 1.0 specification), or is used for formal declaration
    of processing instruction targets (see section 2.6 of the XML 1.0
    specification).

    DOM does not support editing notation nodes; they are therefore read-only.

    A notation node does not have any parent.

    You can retrieve the **publicId** () and **systemId** () from a notation
    node.

    For further information about the Document Object Model see **Level 1**  and
    **Level 2 Core** . For a more general introduction of the DOM implementation
    see the **QDomDocument**  documentation.
    """

    @overload
    def __init__(self) -> None:
        """
        https://doc.qt.io/qt-6/qdomnotation.html#QDomNotation

        **QDomNotation::QDomNotation()**

        Constructor.
        """
        ...
    @overload
    def __init__(self, x: PySide6.QtXml.QDomNotation) -> None:
        """
        https://doc.qt.io/qt-6/qdomnotation.html#QDomNotation-1

        **QDomNotation::QDomNotation(const QDomNotation & x )**

        Constructs a copy of **x**.

        The data of the copy is shared (shallow copy): modifying one node will
        also change the other. If you want to make a deep copy, use
        **cloneNode** ().
        """
        ...
    @staticmethod
    def __copy__() -> None: ...
    def nodeType(self) -> PySide6.QtXml.QDomNode.NodeType:
        """
        https://doc.qt.io/qt-6/qdomnotation.html#nodeType

        **QDomNode::NodeType QDomNotation::nodeType() const**

        Returns `NotationNode`.
        """
        ...
    def publicId(self) -> str:
        """
        https://doc.qt.io/qt-6/qdomnotation.html#publicId

        **QString QDomNotation::publicId() const**

        Returns the public identifier of this notation.
        """
        ...
    def systemId(self) -> str:
        """
        https://doc.qt.io/qt-6/qdomnotation.html#systemId

        **QString QDomNotation::systemId() const**

        Returns the system identifier of this notation.
        """
        ...
