"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide6.QtCore, except for defaults which are replaced by "...".
"""
from __future__ import annotations

from typing import Any, overload

import PySide6.QtCore

class QTransposeProxyModel(PySide6.QtCore.QAbstractProxyModel):
    """
    https://doc.qt.io/qt-6/qtransposeproxymodel.html

    **Detailed Description**

    This model will make the rows of the source model become columns of the
    proxy model and vice-versa.

    If the model is a tree, the parents will be transposed as well. For example,
    if an index in the source model had parent `index(2,0)`, it will have parent
    `index(0,2)` in the proxy.
    """

    def __init__(self, parent: PySide6.QtCore.QObject | None = ...) -> None:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#QTransposeProxyModel-1

        **QTransposeProxyModel::QTransposeProxyModel(QObject * parent =
        nullptr)**

        Constructs a new proxy model with the given **parent**.
        """
        ...
    def columnCount(
        self,
        parent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex) = ...,
    ) -> int:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#columnCount

        **[override virtual] int QTransposeProxyModel::columnCount(const
        QModelIndex & parent = QModelIndex()) const**

        Reimplements: **QAbstractItemModel::columnCount(const QModelIndex
        &parent) const** .
        """
        ...
    def headerData(
        self, section: int, orientation: PySide6.QtCore.Qt.Orientation, role: int = ...
    ) -> Any:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#headerData

        **[override virtual] QVariant QTransposeProxyModel::headerData(int
        section , Qt::Orientation orientation , int role = Qt::DisplayRole)
        const**

        Reimplements: **QAbstractProxyModel::headerData(int section,
        Qt::Orientation orientation, int role) const** .

        **See also** **setHeaderData** ().
        """
        ...
    def index(
        self,
        row: int,
        column: int,
        parent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex) = ...,
    ) -> PySide6.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#index

        **[override virtual] QModelIndex QTransposeProxyModel::index(int row ,
        int column , const QModelIndex & parent = QModelIndex()) const**

        Reimplements: **QAbstractItemModel::index(int row, int column, const
        QModelIndex &parent) const** .
        """
        ...
    def insertColumns(
        self,
        column: int,
        count: int,
        parent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex) = ...,
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#insertColumns

        **[override virtual] bool QTransposeProxyModel::insertColumns(int column
        , int count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::insertColumns** (int column, int
        count, const QModelIndex &parent).
        """
        ...
    def insertRows(
        self,
        row: int,
        count: int,
        parent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex) = ...,
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#insertRows

        **[override virtual] bool QTransposeProxyModel::insertRows(int row , int
        count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::insertRows** (int row, int count,
        const QModelIndex &parent).
        """
        ...
    def itemData(
        self,
        index: PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex,
    ) -> dict[int, Any]:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#itemData

        **[override virtual] QMap<int, QVariant>
        QTransposeProxyModel::itemData(const QModelIndex & index ) const**

        Reimplements: **QAbstractProxyModel::itemData(const QModelIndex
        &proxyIndex) const** .

        **See also** **setItemData** ().
        """
        ...
    def mapFromSource(
        self,
        sourceIndex: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex),
    ) -> PySide6.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#mapFromSource

        **[override virtual] QModelIndex
        QTransposeProxyModel::mapFromSource(const QModelIndex & sourceIndex )
        const**

        Reimplements: **QAbstractProxyModel::mapFromSource(const QModelIndex
        &sourceIndex) const** .
        """
        ...
    def mapToSource(
        self,
        proxyIndex: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex),
    ) -> PySide6.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#mapToSource

        **[override virtual] QModelIndex QTransposeProxyModel::mapToSource(const
        QModelIndex & proxyIndex ) const**

        Reimplements: **QAbstractProxyModel::mapToSource(const QModelIndex
        &proxyIndex) const** .
        """
        ...
    def moveColumns(
        self,
        sourceParent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex),
        sourceColumn: int,
        count: int,
        destinationParent: (
            PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex
        ),
        destinationChild: int,
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#moveColumns

        **[override virtual] bool QTransposeProxyModel::moveColumns(const
        QModelIndex & sourceParent , int sourceRow , int count , const
        QModelIndex & destinationParent , int destinationChild )**

        Reimplements: **QAbstractItemModel::moveColumns** (const QModelIndex
        &sourceParent, int sourceColumn, int count, const QModelIndex
        &destinationParent, int destinationChild).
        """
        ...
    def moveRows(
        self,
        sourceParent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex),
        sourceRow: int,
        count: int,
        destinationParent: (
            PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex
        ),
        destinationChild: int,
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#moveRows

        **[override virtual] bool QTransposeProxyModel::moveRows(const
        QModelIndex & sourceParent , int sourceRow , int count , const
        QModelIndex & destinationParent , int destinationChild )**

        Reimplements: **QAbstractItemModel::moveRows** (const QModelIndex
        &sourceParent, int sourceRow, int count, const QModelIndex
        &destinationParent, int destinationChild).
        """
        ...
    @overload
    def parent(self) -> PySide6.QtCore.QObject:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#parent

        **[override virtual] QModelIndex QTransposeProxyModel::parent(const
        QModelIndex & index ) const**

        Reimplements: **QAbstractItemModel::parent(const QModelIndex &index)
        const** .
        """
        ...
    @overload
    def parent(
        self,
        index: PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex,
    ) -> PySide6.QtCore.QModelIndex:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#parent

        **[override virtual] QModelIndex QTransposeProxyModel::parent(const
        QModelIndex & index ) const**

        Reimplements: **QAbstractItemModel::parent(const QModelIndex &index)
        const** .
        """
        ...
    def removeColumns(
        self,
        column: int,
        count: int,
        parent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex) = ...,
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#removeColumns

        **[override virtual] bool QTransposeProxyModel::removeColumns(int column
        , int count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::removeColumns** (int column, int
        count, const QModelIndex &parent).
        """
        ...
    def removeRows(
        self,
        row: int,
        count: int,
        parent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex) = ...,
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#removeRows

        **[override virtual] bool QTransposeProxyModel::removeRows(int row , int
        count , const QModelIndex & parent = QModelIndex())**

        Reimplements: **QAbstractItemModel::removeRows** (int row, int count,
        const QModelIndex &parent).
        """
        ...
    def rowCount(
        self,
        parent: (PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex) = ...,
    ) -> int:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#rowCount

        **[override virtual] int QTransposeProxyModel::rowCount(const
        QModelIndex & parent = QModelIndex()) const**

        Reimplements: **QAbstractItemModel::rowCount(const QModelIndex &parent)
        const** .
        """
        ...
    def setHeaderData(
        self,
        section: int,
        orientation: PySide6.QtCore.Qt.Orientation,
        value: Any,
        role: int = ...,
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#setHeaderData

        **[override virtual] bool QTransposeProxyModel::setHeaderData(int
        section , Qt::Orientation orientation , const QVariant & value , int
        role = Qt::EditRole)**

        Reimplements: **QAbstractProxyModel::setHeaderData** (int section,
        Qt::Orientation orientation, const QVariant &value, int role).

        **See also** **headerData** ().
        """
        ...
    def setItemData(
        self,
        index: PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex,
        roles: dict[int, Any],
    ) -> bool:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#setItemData

        **[override virtual] bool QTransposeProxyModel::setItemData(const
        QModelIndex & index , const QMap<int, QVariant> & roles )**

        Reimplements: **QAbstractProxyModel::setItemData** (const QModelIndex
        &index, const QMap<int, QVariant> &roles).

        **See also** **itemData** ().
        """
        ...
    def setSourceModel(self, newSourceModel: PySide6.QtCore.QAbstractItemModel) -> None:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#setSourceModel

        **[override virtual] void
        QTransposeProxyModel::setSourceModel(QAbstractItemModel * newSourceModel
        )**

        Reimplements: **QAbstractProxyModel::setSourceModel**
        (QAbstractItemModel *sourceModel).
        """
        ...
    def sort(self, column: int, order: PySide6.QtCore.Qt.SortOrder = ...) -> None:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#sort

        **[override virtual] void QTransposeProxyModel::sort(int column ,
        Qt::SortOrder order = Qt::AscendingOrder)**

        Reimplements: **QAbstractProxyModel::sort** (int column, Qt::SortOrder
        order).

        This method will perform no action. Use a **QSortFilterProxyModel**  on
        top of this one if you require sorting.
        """
        ...
    def span(
        self,
        index: PySide6.QtCore.QModelIndex | PySide6.QtCore.QPersistentModelIndex,
    ) -> PySide6.QtCore.QSize:
        """
        https://doc.qt.io/qt-6/qtransposeproxymodel.html#span

        **[override virtual] QSize QTransposeProxyModel::span(const QModelIndex
        & index ) const**

        Reimplements: **QAbstractProxyModel::span(const QModelIndex &index)
        const** .
        """
        ...
