"""
PySide stub files generated by **IceSpringPySideStubs**

Home: https://baijifeilong.github.io/2022/01/06/ice-spring-pyside-stubs/index.html

Github: https://github.com/baijifeilong/IceSpringPySideStubs

PyPI(PySide2): https://pypi.org/project/IceSpringPySideStubs-PySide2

PyPI(PySide6): https://pypi.org/project/IceSpringPySideStubs-PySide6

PyPI(PyQt5): https://pypi.org/project/IceSpringPySideStubs-PyQt5

PyPI(PyQt6): https://pypi.org/project/IceSpringPySideStubs-PyQt6

Generated by BaiJiFeiLong@gmail.com

License: MIT
"""
"""
This file contains the exact signatures for all functions in module
PySide6.QtWidgets, except for defaults which are replaced by "...".
"""

from __future__ import annotations

import PySide6.QtCore
import PySide6.QtGui
import PySide6.QtWidgets

class QStyleFactory:
    """
    https://doc.qt.io/qt-6/qstylefactory.html

    **Detailed Description**

    The **QStyle**  class is an abstract base class that encapsulates the look
    and feel of a GUI. QStyleFactory creates a **QStyle**  object using the
    **create** () function and a key identifying the style. The styles are
    either built-in or dynamically loaded from a style plugin (see
    **QStylePlugin** ).

    The valid keys can be retrieved using the **keys** () function. Typically
    they include "windows" and "fusion". Depending on the platform,
    "windowsvista" and "macos" may be available. Note that keys are case
    insensitive.

    **See also** **QStyle** .
    """

    def __init__(self) -> None: ...
    @staticmethod
    def create(arg__1: str) -> PySide6.QtWidgets.QStyle:
        """
        https://doc.qt.io/qt-6/qstylefactory.html#create

        **[static] QStyle *QStyleFactory::create(const QString & key )**

        Creates and returns a **QStyle**  object that matches the given **key**
        , or returns `nullptr` if no matching style is found.

        Both built-in styles and styles from style plugins are queried for a
        matching style.

        **Note:** The keys used are case insensitive.

        **See also** **keys** ().
        """
        ...
    @staticmethod
    def keys() -> list[str]:
        """
        https://doc.qt.io/qt-6/qstylefactory.html#keys

        **[static] QStringList QStyleFactory::keys()**

        Returns the list of valid keys, i.e. the keys this factory can create
        styles for.

        **See also** **create** ().
        """
        ...
