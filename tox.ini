[tox]
envlist = clean,py3{9,10,11,12}-{pyqt5,pyside2,pyqt6,pyside6},coverage
skip_missing_interpreters = True

[coverage:paths]
source =
    src/
    */site-packages
others =
    src/
    */src

[coverage:run]
branch = true
; See https://github.com/nedbat/coveragepy/issues/1392
source =
    src/qtpygraph/
omit =
    src/qtpygraph/__main__.py
    .vscode/
    .venv/
    tests/
    stubs/
disable_warnings =
    no-data-collected

[coverage:html]
directory = logs/coverage/html

[coverage:json]
output = logs/coverage/coverage.json

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    @(abc\.)?abstractmethod

[tool:pytest]
addopts = --lf --doctest-modules
testpaths =
    tests
doctest_plus = enabled
env =
    ; Enable this if you need offscreen testing locally
    ; D:QT_QPA_PLATFORM=offscreen

    ; Enable these if you need to debug coverage issues
    ; D:COVERAGE_DEBUG=trace
    ; D:COVERAGE_DEBUG_FILE=stdout
filterwarnings =
    ; Occurs when mocking QWidgets
    ignore:pyside_type_init:RuntimeWarning

[testenv]
description = Run tests
runner = uv-venv-lock-runner
extras = tests
depends =
    py3{9,10,11,12}-{pyqt5,pyside2,pyqt6,pyside6}: clean
    coverage: py3{9,10,11,12}-{pyqt5,pyside2,pyqt6,pyside6}
setenv =
    ; See: https://github.com/tox-dev/tox/issues/1550
    PYTHONIOENCODING=utf-8
    COVERAGE_FILE=.coverage.{envname}
    ; See https://github.com/pytest-dev/pytest-qt/issues/437
    pyqt5:
        D:PYTEST_QT_API=pyqt5
        D:QT_API=pyqt5
    pyside2:
        D:PYTEST_QT_API=pyside2
        D:QT_API=pyside2
    pyqt6:
        D:PYTEST_QT_API=pyqt6
        D:QT_API=pyqt6
    pyside6:
        D:PYTEST_QT_API=pyside6
        D:QT_API=pyside6
commands =
    pyqt5:
        uv add --extra pyqt5
        coverage run -m pytest {posargs:tests}
    pyside2:
        uv add --extra pyside2
        coverage run -m pytest {posargs:tests}
    pyqt6:
        uv add --extra pyqt6
        coverage run -m pytest {posargs:tests}
    pyside6:
        uv add --extra pyside6
        coverage run -m pytest {posargs:tests}

[testenv:coverage]
description = Calculate code coverage
runner = uv-venv-lock-runner
extras = tests
basepython = py312
setenv =
    ; See: https://github.com/tox-dev/tox/issues/1550
    PYTHONIOENCODING=utf-8
    COVERAGE_FILE=.coverage
commands =
    coverage combine
    coverage report -m --skip-covered
    coverage html
    coverage json
parallel_show_output = true

[testenv:clean]
skip_install =
    true
deps =
    coverage
commands =
    coverage erase

# Not run by default. To run, use `tox -e docs`
[testenv:docs]
allowlist_externals =
    sphinx-build
commands =
    sphinx-build -W --keep-going -b html docs/source docs/build
